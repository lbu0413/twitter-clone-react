{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Spit.js","components/SpitFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","e","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","action","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","data","console","log","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Spit","spitObj","isOwner","editing","setEditing","text","newSpit","setNewSpit","onDeleteClick","window","confirm","doc","id","delete","refFromURL","attachmentURL","toggleEditing","update","autoFocus","width","height","alt","src","faTrash","cursor","faPencilAlt","SpitFactory","userObj","spit","setSpit","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","for","faPlus","accept","file","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","spits","setSpits","useEffect","onSnapshot","snapshot","spitArray","docs","map","marginTop","Profile","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","updateProfile","signOut","push","Navigation","display","justifyContent","alignItems","to","marginRight","flexDirection","fontSize","marginLeft","faUser","AppRouter","isLoggedIn","maxWidth","margin","exact","path","App","init","setInit","setIsLoggedIn","setUserObj","onAuthStateChanged","user","args","currentUser","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gQAcAA,IAASC,cATc,CACtBC,OAAQC,0CACRC,WAAYD,sCACZE,UAAWF,sBACXG,cAAeH,kCACfI,kBAAmBJ,gBACnBK,MAAOL,+CAKD,IAAMM,EAAmBT,IAEnBU,EAAcV,IAASW,OACvBC,EAAYZ,IAASa,YACrBC,EAAiBd,IAASe,U,OCqDxBC,EAtEE,WAChB,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAAoCJ,oBAAS,GAA7C,mBAAOK,EAAP,KAAmBC,EAAnB,KACA,EAA0BN,mBAAS,IAAnC,mBAAOO,EAAP,KAAcC,EAAd,KAMMC,EAAW,SAACC,GACjB,MAAwBA,EAAEC,OAAlBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MACD,UAATD,EACHV,EAASW,GACU,aAATD,GACVR,EAAYS,IAIRC,EAAQ,uCAAG,WAAOJ,GAAP,SAAAK,EAAA,yDAChBL,EAAEM,iBADc,UAIXX,EAJW,gCAKDZ,EAAYwB,+BACxBhB,EACAE,GAPa,sDAUDV,EAAYyB,2BAA2BjB,EAAOE,GAV7C,yEAafK,EAAS,KAAMW,SAbA,0DAAH,sDAgBd,OACC,qCACC,uBAAMC,OAAO,GAAGN,SAAUA,EAAUO,UAAU,YAA9C,UACC,uBACCT,KAAK,QACLU,KAAK,OACLC,YAAY,QACZC,UAAQ,EACRX,MAAOZ,EACPQ,SAAUA,EACVY,UAAU,cAEX,uBACCT,KAAK,WACLU,KAAK,WACLC,YAAY,WACZC,UAAQ,EACRX,MAAOV,EACPM,SAAUA,EACVY,UAAU,cAEX,uBACCC,KAAK,SACLT,MAAOR,EAAa,iBAAmB,UACvCgB,UAAU,yBAEVd,GAAS,sBAAMc,UAAU,YAAhB,SAA6Bd,OAExC,sBAAMkB,QAzDc,WACrB,OAAOnB,GAAc,SAACoB,GAAD,OAAWA,MAwDDL,UAAU,aAAxC,SACEhB,EAAa,UAAY,uB,gBCvBfsB,EAlCF,WACZ,IAAMC,EAAa,uCAAG,WAAOlB,GAAP,mBAAAK,EAAA,4DAGR,YAFLH,EAASF,EAAEC,OAAXC,MAGPiB,EAAW,IAAIrC,EAAiBE,KAAKoC,mBAClB,WAATlB,IACViB,EAAW,IAAIrC,EAAiBE,KAAKqC,oBANjB,SAQFtC,EAAYuC,gBAAgBH,GAR1B,OAQfI,EARe,OASrBC,QAAQC,IAAIF,GATS,2CAAH,sDAYnB,OACC,sBAAKZ,UAAU,gBAAf,UACC,cAAC,IAAD,CACCe,KAAMC,IACNC,MAAO,UACPC,KAAK,KACLC,MAAO,CAAEC,aAAc,MAExB,cAAC,EAAD,IACA,sBAAKpB,UAAU,WAAf,UACC,yBAAQI,QAASG,EAAehB,KAAK,SAASS,UAAU,UAAxD,kCACsB,cAAC,IAAD,CAAiBe,KAAMM,SAE7C,yBAAQjB,QAASG,EAAehB,KAAK,SAASS,UAAU,UAAxD,kCACsB,cAAC,IAAD,CAAiBe,KAAMO,gB,wBCuClCC,EAvEF,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,QAASC,EAAc,EAAdA,QACxB,EAA8B9C,oBAAS,GAAvC,mBAAO+C,EAAP,KAAgBC,EAAhB,KACA,EAA8BhD,mBAAS6C,EAAQI,MAA/C,mBAAOC,EAAP,KAAgBC,EAAhB,KACMC,EAAa,uCAAG,sBAAArC,EAAA,0DACVsC,OAAOC,QAAQ,iBADL,gCAGd3D,EAAU4D,IAAV,gBAAuBV,EAAQW,KAAMC,SAHvB,uBAId5D,EAAe6D,WAAWb,EAAQc,eAAeF,SAJnC,2CAAH,qDAObG,EAAgB,kBAAMZ,GAAW,SAACtB,GAAD,OAAWA,MAYlD,OACC,qBAAKL,UAAU,OAAf,SACE0B,EACA,qCACC,uBAAMjC,SAXO,SAACJ,GACjBA,EAAEM,iBACFrB,EAAU4D,IAAV,gBAAuBV,EAAQW,KAAMK,OAAO,CAC3CZ,KAAMC,IAEPF,GAAW,IAMkB3B,UAAU,qBAApC,UACC,uBACCR,MAAOqC,EACP5B,KAAK,OACLE,UAAQ,EACRsC,WAAS,EACTvC,YAAY,iBACZd,SAtBW,SAACC,GACjB,IAAQG,EAAUH,EAAEC,OAAZE,MACRsC,EAAWtC,IAqBNQ,UAAU,cAEX,uBAAOC,KAAK,SAAST,MAAM,cAAcQ,UAAU,eAEpD,sBAAMI,QAASmC,EAAevC,UAAU,oBAAxC,uBAKD,qCACC,6BAAKwB,EAAQI,OACZJ,EAAQc,eACR,qBACCnB,MAAO,CAAEuB,MAAO,OAAQC,OAAQ,QAChCC,IAAI,GACJC,IAAKrB,EAAQc,gBAGdb,GACA,sBAAKzB,UAAU,gBAAf,UACC,sBAAMI,QAAS2B,EAAf,SACC,cAAC,IAAD,CAAiBhB,KAAM+B,IAAS3B,MAAO,CAAE4B,OAAQ,eAElD,sBAAM3C,QAASmC,EAAf,SACC,cAAC,IAAD,CACCxB,KAAMiC,IACN7B,MAAO,CAAE4B,OAAQ,sBArCGvB,EAAQW,K,QCiEtBc,EAtFK,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,EAAwBvE,mBAAS,IAAjC,mBAAOwE,EAAP,KAAaC,EAAb,KACA,EAAoCzE,mBAAS,IAA7C,mBAAO0E,EAAP,KAAmBC,EAAnB,KAEM7D,EAAQ,uCAAG,WAAOJ,GAAP,qBAAAK,EAAA,yDACH,KAATyD,EADY,oDAIhB9D,EAAEM,iBACE2C,EAAgB,GACD,KAAfe,EANY,wBAOTE,EAAgB/E,EACpBgF,MACAC,MAFoB,UAEXP,EAAQQ,IAFG,YAEIC,gBATX,SAUQJ,EAAcK,UAAUP,EAAY,YAV5C,cAUTQ,EAVS,iBAWOA,EAASL,IAAIM,iBAXpB,QAWfxB,EAXe,sBAaVd,EAAU,CACfI,KAAMuB,EACNY,UAAWC,KAAKC,MAChBC,UAAWhB,EAAQQ,IACnBpB,iBAjBe,UAmBVhE,EAAU6F,WAAW,SAASC,IAAI5C,GAnBxB,QAoBhB4B,EAAQ,IACRE,EAAc,IArBE,4CAAH,sDAyCd,OACC,uBAAM7D,SAAUA,EAAUO,UAAU,cAApC,UACC,sBAAKA,UAAU,0BAAf,UACC,uBACCA,UAAU,sBACVR,MAAO2D,EACP/D,SAvBa,SAACC,GACjB,IAAQG,EAAUH,EAAEC,OAAZE,MACR4D,EAAQ5D,IAsBLS,KAAK,OACLC,YAAY,2BACZmE,UAAW,MAEZ,uBAAOpE,KAAK,SAAST,MAAM,SAASQ,UAAU,2BAE/C,wBAAOsE,IAAI,cAActE,UAAU,sBAAnC,UACC,8CACA,cAAC,IAAD,CAAiBe,KAAMwD,SAExB,uBACCpC,GAAG,cACHlC,KAAK,OACLuE,OAAO,UACPpF,SAjCkB,SAACC,GACrB,IACMoF,EADYpF,EAAEC,OAAZoF,MACW,GACbC,EAAS,IAAIC,WACnBD,EAAOE,UAAY,SAACC,GACnB,IAAQC,EAAWD,EAAcE,cAAzBD,OACRzB,EAAcyB,IAEfJ,EAAOM,cAAcR,IA0BnBtD,MAAO,CAAE+D,QAAS,KAElB7B,GACA,sBAAKrD,UAAU,0BAAf,UACC,qBACC6C,IAAKQ,EACLlC,MAAO,CAAEgE,gBAAiB9B,GAC1BT,IAAI,KAEL,sBAAK5C,UAAU,qBAAqBI,QAjCd,kBAAMkD,EAAc,KAiC1C,UACC,0CACA,cAAC,IAAD,CAAiBvC,KAAMqE,gBCvCdC,EAxCF,SAAC,GAAiB,IAAfnC,EAAc,EAAdA,QACf,EAA0BvE,mBAAS,IAAnC,mBAAO2G,EAAP,KAAcC,EAAd,KAuBA,OAVAC,qBAAU,WACTlH,EAAU6F,WAAW,SAASsB,YAAW,SAACC,GACzC,IAAMC,EAAYD,EAASE,KAAKC,KAAI,SAAC3D,GAAD,oBACnCC,GAAID,EAAIC,IACLD,EAAItB,WAER2E,EAASI,QAER,IAGF,sBAAK3F,UAAU,YAAf,UACC,cAAC,EAAD,CAAakD,QAASA,IACtB,qBAAK/B,MAAO,CAAE2E,UAAW,IAAzB,SACER,EAAMO,KAAI,SAAC1C,GAAD,OACV,cAAC,EAAD,CAEC3B,QAAS2B,EACT1B,QAAS0B,EAAKe,YAAchB,EAAQQ,KAF/BP,EAAKhB,aCyBD4D,EAzDC,SAAC,GAA8B,IAA5B7C,EAA2B,EAA3BA,QAAS8C,EAAkB,EAAlBA,YACrBC,EAAUC,cAChB,EAA4CvH,mBAASuE,EAAQiD,aAA7D,mBAAOC,EAAP,KAAuBC,EAAvB,KAqBM5G,EAAQ,uCAAG,WAAOJ,GAAP,SAAAK,EAAA,yDAChBL,EAAEM,iBACEuD,EAAQiD,cAAgBC,EAFZ,gCAGTlD,EAAQoD,cAAc,CAC3BH,YAAaC,IAJC,OAMfJ,IANe,2CAAH,sDAUd,OACC,sBAAKhG,UAAU,YAAf,UACC,uBAAMP,SAAUA,EAAUO,UAAU,cAApC,UACC,uBACCZ,SAtBa,SAACC,GACjB,IAAQG,EAAUH,EAAEC,OAAZE,MACR6G,EAAkB7G,IAqBfS,KAAK,OACLC,YAAY,eACZuC,WAAS,EACTzC,UAAU,cAEX,uBACCC,KAAK,SACLT,MAAM,iBACNQ,UAAU,UACVmB,MAAO,CAAE2E,UAAW,SAGtB,sBAAM1F,QA/Cc,WACrBhC,EAAYmI,UACZN,EAAQO,KAAK,MA6CkBxG,UAAU,2BAAxC,0BCEYyG,EAlDI,SAAC,GAAiB,IAAfvD,EAAc,EAAdA,QACrB,OACC,8BACC,qBACC/B,MAAO,CACNuF,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZd,UAAW,IALb,UAOC,6BACC,eAAC,IAAD,CACCe,GAAG,IACH1F,MAAO,CACN2F,YAAa,GACbJ,QAAS,OACTK,cAAe,SACfH,WAAY,SACZD,eAAgB,SAChBK,SAAU,IARZ,UAUC,cAAC,IAAD,CAAiBjG,KAAMC,IAAWC,MAAO,UAAWC,KAAK,OAEzD,sBAAMC,MAAO,CAAE2E,UAAW,GAAIkB,SAAU,QAAxC,uBAGF,6BACC,eAAC,IAAD,CACCH,GAAG,WACH1F,MAAO,CACN8F,WAAY,GACZP,QAAS,OACTK,cAAe,SACfH,WAAY,SACZD,eAAgB,SAChBK,SAAU,IARZ,UAUC,cAAC,IAAD,CAAiBjG,KAAMmG,IAAQjG,MAAO,UAAWC,KAAK,OACtD,sBAAMC,MAAO,CAAE2E,UAAW,GAAIkB,SAAU,QAAxC,SACE9D,EAAQiD,YAAR,UACKjD,EAAQiD,YADb,YAEE,uBCNKgB,EAlCG,SAAC,GAA0C,IAAxCC,EAAuC,EAAvCA,WAAYlE,EAA2B,EAA3BA,QAAS8C,EAAkB,EAAlBA,YACzC,OACC,eAAC,IAAD,WACEoB,GAAc,cAAC,EAAD,CAAYlE,QAASA,IACpC,cAAC,IAAD,UACEkE,EACA,sBACCjG,MAAO,CACNkG,SAAU,IACV3E,MAAO,OACP4E,OAAQ,SACRxB,UAAW,GACXY,QAAS,OACTC,eAAgB,UAPlB,UASC,cAAC,IAAD,CAAOY,OAAK,EAACC,KAAK,IAAlB,SACC,cAAC,EAAD,CAAMxB,YAAaA,EAAa9C,QAASA,MAE1C,cAAC,IAAD,CAAOqE,OAAK,EAACC,KAAK,WAAlB,SACC,cAAC,EAAD,CAASxB,YAAaA,EAAa9C,QAASA,SAI9C,mCACC,cAAC,IAAD,CAAOqE,OAAK,EAACC,KAAK,IAAlB,SACC,cAAC,EAAD,cCeQC,MA1Cf,WACC,MAAwB9I,oBAAS,GAAjC,mBAAO+I,EAAP,KAAaC,EAAb,KACA,EAAoChJ,oBAAS,GAA7C,mBAAOyI,EAAP,KAAmBQ,EAAnB,KACA,EAA8BjJ,mBAAS,IAAvC,mBAAOuE,EAAP,KAAgB2E,EAAhB,KAwBA,OAvBArC,qBAAU,WACTpH,EAAY0J,oBAAmB,SAACC,GAC3BA,GACHH,GAAc,GACdC,EAAW,CACV1B,YAAa4B,EAAK5B,YAClBzC,IAAKqE,EAAKrE,IACV4C,cAAe,SAAC0B,GAAD,OAAUD,EAAKzB,cAAc0B,OAG7CJ,GAAc,GAEfD,GAAQ,QAEP,IAUF,mCACED,EACA,cAAC,EAAD,CACC1B,YAZgB,WACnB,IAAM+B,EAAO3J,EAAY6J,YACzBJ,EAAW,CACV1B,YAAa4B,EAAK5B,YAClBzC,IAAKqE,EAAKrE,IACV4C,cAAe,SAAC0B,GAAD,OAAUD,EAAKzB,cAAc0B,OAQ1CZ,WAAYA,EACZlE,QAASA,IAGV,qB,YCnCJgF,IAASC,OACR,cAAC,IAAMC,WAAP,UACC,cAAC,EAAD,MAEDC,SAASC,eAAe,W","file":"static/js/main.49ff239e.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\n\nconst firebaseConfig = {\n\tapiKey: process.env.REACT_APP_API_KEY,\n\tauthDomain: process.env.REACT_APP_AUTH_DOMAIN,\n\tprojectId: process.env.REACT_APP_PROJECT_ID,\n\tstorageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n\tmessagingSenderId: process.env.REACT_APP_MESSAGING_ID,\n\tappId: process.env.REACT_APP_APP_ID,\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const firebaseInstance = firebase;\n\nexport const authService = firebase.auth();\nexport const dbService = firebase.firestore();\nexport const storageService = firebase.storage();\n","import React, { useState } from \"react\";\nimport { authService, firebaseInstance } from \"../fbase\";\n\nconst AuthForm = () => {\n\tconst [email, setEmail] = useState(\"\");\n\tconst [password, setPassword] = useState(\"\");\n\tconst [newAccount, setNewAccount] = useState(true);\n\tconst [error, setError] = useState(\"\");\n\n\tconst toggleAccount = () => {\n\t\treturn setNewAccount((prev) => !prev);\n\t};\n\n\tconst onChange = (e) => {\n\t\tconst { name, value } = e.target;\n\t\tif (name === \"email\") {\n\t\t\tsetEmail(value);\n\t\t} else if (name === \"password\") {\n\t\t\tsetPassword(value);\n\t\t}\n\t};\n\n\tconst onSubmit = async (e) => {\n\t\te.preventDefault();\n\t\ttry {\n\t\t\tlet data;\n\t\t\tif (newAccount) {\n\t\t\t\tdata = await authService.createUserWithEmailAndPassword(\n\t\t\t\t\temail,\n\t\t\t\t\tpassword\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tdata = await authService.signInWithEmailAndPassword(email, password);\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tsetError(error.message);\n\t\t}\n\t};\n\treturn (\n\t\t<>\n\t\t\t<form action=\"\" onSubmit={onSubmit} className=\"container\">\n\t\t\t\t<input\n\t\t\t\t\tname=\"email\"\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tplaceholder=\"email\"\n\t\t\t\t\trequired\n\t\t\t\t\tvalue={email}\n\t\t\t\t\tonChange={onChange}\n\t\t\t\t\tclassName=\"authInput\"\n\t\t\t\t/>\n\t\t\t\t<input\n\t\t\t\t\tname=\"password\"\n\t\t\t\t\ttype=\"password\"\n\t\t\t\t\tplaceholder=\"password\"\n\t\t\t\t\trequired\n\t\t\t\t\tvalue={password}\n\t\t\t\t\tonChange={onChange}\n\t\t\t\t\tclassName=\"authInput\"\n\t\t\t\t/>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\tvalue={newAccount ? \"Create account\" : \"Sign in\"}\n\t\t\t\t\tclassName=\"authInput authSubmit\"\n\t\t\t\t/>\n\t\t\t\t{error && <span className=\"authError\">{error}</span>}\n\t\t\t</form>\n\t\t\t<span onClick={toggleAccount} className=\"authSwitch\">\n\t\t\t\t{newAccount ? \"Sign in\" : \"Create account\"}\n\t\t\t</span>\n\t\t</>\n\t);\n};\n\nexport default AuthForm;\n","import React, { useState } from \"react\";\nimport { authService, firebaseInstance } from \"../fbase\";\nimport AuthForm from \"../components/AuthForm\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n\tfaTwitter,\n\tfaGoogle,\n\tfaGithub,\n} from \"@fortawesome/free-brands-svg-icons\";\n\nconst Auth = () => {\n\tconst onSocialClick = async (e) => {\n\t\tconst { name } = e.target;\n\t\tlet provider;\n\t\tif (name === \"google\") {\n\t\t\tprovider = new firebaseInstance.auth.GoogleAuthProvider();\n\t\t} else if (name === \"github\") {\n\t\t\tprovider = new firebaseInstance.auth.GithubAuthProvider();\n\t\t}\n\t\tconst data = await authService.signInWithPopup(provider);\n\t\tconsole.log(data);\n\t};\n\n\treturn (\n\t\t<div className=\"authContainer\">\n\t\t\t<FontAwesomeIcon\n\t\t\t\ticon={faTwitter}\n\t\t\t\tcolor={\"#04AAFF\"}\n\t\t\t\tsize=\"3x\"\n\t\t\t\tstyle={{ marginBottom: 30 }}\n\t\t\t/>\n\t\t\t<AuthForm />\n\t\t\t<div className=\"authBtns\">\n\t\t\t\t<button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\n\t\t\t\t\tContinue with Google <FontAwesomeIcon icon={faGoogle} />\n\t\t\t\t</button>\n\t\t\t\t<button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\n\t\t\t\t\tContinue with Github <FontAwesomeIcon icon={faGithub} />\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Auth;\n","import React, { useState } from \"react\";\nimport { dbService, storageService } from \"../fbase\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Spit = ({ spitObj, isOwner }) => {\n\tconst [editing, setEditing] = useState(false);\n\tconst [newSpit, setNewSpit] = useState(spitObj.text);\n\tconst onDeleteClick = async () => {\n\t\tconst ok = window.confirm(\"Are you sure?\");\n\t\tif (ok) {\n\t\t\tawait dbService.doc(`spits/${spitObj.id}`).delete();\n\t\t\tawait storageService.refFromURL(spitObj.attachmentURL).delete();\n\t\t}\n\t};\n\tconst toggleEditing = () => setEditing((prev) => !prev);\n\tconst onChange = (e) => {\n\t\tconst { value } = e.target;\n\t\tsetNewSpit(value);\n\t};\n\tconst onSubmit = (e) => {\n\t\te.preventDefault();\n\t\tdbService.doc(`spits/${spitObj.id}`).update({\n\t\t\ttext: newSpit,\n\t\t});\n\t\tsetEditing(false);\n\t};\n\treturn (\n\t\t<div className=\"spit\" key={spitObj.id}>\n\t\t\t{editing ? (\n\t\t\t\t<>\n\t\t\t\t\t<form onSubmit={onSubmit} className=\"container spitEdit\">\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tvalue={newSpit}\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\tautoFocus\n\t\t\t\t\t\t\tplaceholder=\"Edit your spit\"\n\t\t\t\t\t\t\tonChange={onChange}\n\t\t\t\t\t\t\tclassName=\"formInput\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<input type=\"submit\" value=\"Update Spit\" className=\"formBtn\" />\n\t\t\t\t\t</form>\n\t\t\t\t\t<span onClick={toggleEditing} className=\"formBtn cancelBtn\">\n\t\t\t\t\t\tCancel\n\t\t\t\t\t</span>\n\t\t\t\t</>\n\t\t\t) : (\n\t\t\t\t<>\n\t\t\t\t\t<h4>{spitObj.text}</h4>\n\t\t\t\t\t{spitObj.attachmentURL && (\n\t\t\t\t\t\t<img\n\t\t\t\t\t\t\tstyle={{ width: \"50px\", height: \"50px\" }}\n\t\t\t\t\t\t\talt=\"\"\n\t\t\t\t\t\t\tsrc={spitObj.attachmentURL}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t\t{isOwner && (\n\t\t\t\t\t\t<div className=\"spit__actions\">\n\t\t\t\t\t\t\t<span onClick={onDeleteClick}>\n\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={faTrash} style={{ cursor: \"pointer\" }} />\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t<span onClick={toggleEditing}>\n\t\t\t\t\t\t\t\t<FontAwesomeIcon\n\t\t\t\t\t\t\t\t\ticon={faPencilAlt}\n\t\t\t\t\t\t\t\t\tstyle={{ cursor: \"pointer\" }}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t</>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nexport default Spit;\n","import React, { useState } from \"react\";\nimport Spit from \"./Spit\";\nimport { dbService, storageService } from \"../fbase\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nconst SpitFactory = ({ userObj }) => {\n\tconst [spit, setSpit] = useState(\"\");\n\tconst [attachment, setAttachment] = useState(\"\");\n\n\tconst onSubmit = async (e) => {\n\t\tif (spit === \"\") {\n\t\t\treturn;\n\t\t}\n\t\te.preventDefault();\n\t\tlet attachmentURL = \"\";\n\t\tif (attachment !== \"\") {\n\t\t\tconst attachmentRef = storageService\n\t\t\t\t.ref()\n\t\t\t\t.child(`${userObj.uid}/${uuidv4()}`);\n\t\t\tconst response = await attachmentRef.putString(attachment, \"data_url\");\n\t\t\tattachmentURL = await response.ref.getDownloadURL();\n\t\t}\n\t\tconst spitObj = {\n\t\t\ttext: spit,\n\t\t\tcreatedAt: Date.now(),\n\t\t\tcreatorId: userObj.uid,\n\t\t\tattachmentURL,\n\t\t};\n\t\tawait dbService.collection(\"spits\").add(spitObj);\n\t\tsetSpit(\"\");\n\t\tsetAttachment(\"\");\n\t};\n\n\tconst onChange = (e) => {\n\t\tconst { value } = e.target;\n\t\tsetSpit(value);\n\t};\n\n\tconst onFileChange = (e) => {\n\t\tconst { files } = e.target;\n\t\tconst file = files[0];\n\t\tconst reader = new FileReader();\n\t\treader.onloadend = (finishedEvent) => {\n\t\t\tconst { result } = finishedEvent.currentTarget;\n\t\t\tsetAttachment(result);\n\t\t};\n\t\treader.readAsDataURL(file);\n\t};\n\tconst onClearAttachment = () => setAttachment(\"\");\n\n\treturn (\n\t\t<form onSubmit={onSubmit} className=\"factoryForm\">\n\t\t\t<div className=\"factoryInput__container\">\n\t\t\t\t<input\n\t\t\t\t\tclassName=\"factoryInput__input\"\n\t\t\t\t\tvalue={spit}\n\t\t\t\t\tonChange={onChange}\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tplaceholder=\"Spit what's on your mind\"\n\t\t\t\t\tmaxLength={120}\n\t\t\t\t/>\n\t\t\t\t<input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\n\t\t\t</div>\n\t\t\t<label for=\"attach-file\" className=\"factoryInput__label\">\n\t\t\t\t<span>Add Photos</span>\n\t\t\t\t<FontAwesomeIcon icon={faPlus} />\n\t\t\t</label>\n\t\t\t<input\n\t\t\t\tid=\"attach-file\"\n\t\t\t\ttype=\"file\"\n\t\t\t\taccept=\"image/*\"\n\t\t\t\tonChange={onFileChange}\n\t\t\t\tstyle={{ opacity: 0 }}\n\t\t\t/>\n\t\t\t{attachment && (\n\t\t\t\t<div className=\"factoryForm__attachment\">\n\t\t\t\t\t<img\n\t\t\t\t\t\tsrc={attachment}\n\t\t\t\t\t\tstyle={{ backgroundImage: attachment }}\n\t\t\t\t\t\talt=\"\"\n\t\t\t\t\t/>\n\t\t\t\t\t<div className=\"factoryForm__clear\" onClick={onClearAttachment}>\n\t\t\t\t\t\t<span>Remove</span>\n\t\t\t\t\t\t<FontAwesomeIcon icon={faTimes} />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</form>\n\t);\n};\n\nexport default SpitFactory;\n","import React, { useState, useEffect } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport Spit from \"../components/Spit\";\nimport { dbService, storageService } from \"../fbase\";\nimport SpitFactory from \"../components/SpitFactory\";\n\nconst Home = ({ userObj }) => {\n\tconst [spits, setSpits] = useState([]);\n\n\tconst getSpits = async () => {\n\t\tconst dbSpits = await dbService.collection(\"spits\").get();\n\t\tdbSpits.forEach((document) => {\n\t\t\tconst spitObject = {\n\t\t\t\t...document.data(),\n\t\t\t\tid: document.id,\n\t\t\t};\n\t\t\tsetSpits((prev) => [spitObject, ...prev]);\n\t\t});\n\t};\n\n\tuseEffect(() => {\n\t\tdbService.collection(\"spits\").onSnapshot((snapshot) => {\n\t\t\tconst spitArray = snapshot.docs.map((doc) => ({\n\t\t\t\tid: doc.id,\n\t\t\t\t...doc.data(),\n\t\t\t}));\n\t\t\tsetSpits(spitArray);\n\t\t});\n\t}, []);\n\n\treturn (\n\t\t<div className=\"container\">\n\t\t\t<SpitFactory userObj={userObj} />\n\t\t\t<div style={{ marginTop: 30 }}>\n\t\t\t\t{spits.map((spit) => (\n\t\t\t\t\t<Spit\n\t\t\t\t\t\tkey={spit.id}\n\t\t\t\t\t\tspitObj={spit}\n\t\t\t\t\t\tisOwner={spit.creatorId === userObj.uid}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Home;\n","import React, { useEffect, useState } from \"react\";\nimport { authService, dbService } from \"../fbase\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Profile = ({ userObj, refreshUser }) => {\n\tconst history = useHistory();\n\tconst [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n\tconst onLogOutClick = () => {\n\t\tauthService.signOut();\n\t\thistory.push(\"/\");\n\t};\n\t// const getMySpits = async () => {\n\t// \tconst spits = await dbService\n\t// \t\t.collection(\"spits\")\n\t// \t\t.where(\"creatorId\", \"==\", userObj.uid)\n\t// \t\t.orderBy(\"createdAt\")\n\t// \t\t.get();\n\t// \tconsole.log(spits.docs.map((doc) => doc.data()));\n\t// };\n\tconst onChange = (e) => {\n\t\tconst { value } = e.target;\n\t\tsetNewDisplayName(value);\n\t};\n\t// useEffect(() => {\n\t// \tgetMySpits();\n\t// });\n\n\tconst onSubmit = async (e) => {\n\t\te.preventDefault();\n\t\tif (userObj.displayName !== newDisplayName) {\n\t\t\tawait userObj.updateProfile({\n\t\t\t\tdisplayName: newDisplayName,\n\t\t\t});\n\t\t\trefreshUser();\n\t\t}\n\t};\n\n\treturn (\n\t\t<div className=\"container\">\n\t\t\t<form onSubmit={onSubmit} className=\"profileForm\">\n\t\t\t\t<input\n\t\t\t\t\tonChange={onChange}\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tplaceholder=\"Display name\"\n\t\t\t\t\tautoFocus\n\t\t\t\t\tclassName=\"formInput\"\n\t\t\t\t/>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\tvalue=\"Update Profile\"\n\t\t\t\t\tclassName=\"formBtn\"\n\t\t\t\t\tstyle={{ marginTop: 10 }}\n\t\t\t\t/>\n\t\t\t</form>\n\t\t\t<span onClick={onLogOutClick} className=\"formBtn cancelBtn logOut\">\n\t\t\t\tSign out\n\t\t\t</span>\n\t\t</div>\n\t);\n};\n\nexport default Profile;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Navigation = ({ userObj }) => {\n\treturn (\n\t\t<nav>\n\t\t\t<ul\n\t\t\t\tstyle={{\n\t\t\t\t\tdisplay: \"flex\",\n\t\t\t\t\tjustifyContent: \"center\",\n\t\t\t\t\talignItems: \"center\",\n\t\t\t\t\tmarginTop: 50,\n\t\t\t\t}}>\n\t\t\t\t<li>\n\t\t\t\t\t<Link\n\t\t\t\t\t\tto=\"/\"\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tmarginRight: 20,\n\t\t\t\t\t\t\tdisplay: \"flex\",\n\t\t\t\t\t\t\tflexDirection: \"column\",\n\t\t\t\t\t\t\talignItems: \"center\",\n\t\t\t\t\t\t\tjustifyContent: \"center\",\n\t\t\t\t\t\t\tfontSize: 12,\n\t\t\t\t\t\t}}>\n\t\t\t\t\t\t<FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"3x\" />\n\n\t\t\t\t\t\t<span style={{ marginTop: 10, fontSize: \"14px\" }}>Home</span>\n\t\t\t\t\t</Link>\n\t\t\t\t</li>\n\t\t\t\t<li>\n\t\t\t\t\t<Link\n\t\t\t\t\t\tto=\"/profile\"\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tmarginLeft: 20,\n\t\t\t\t\t\t\tdisplay: \"flex\",\n\t\t\t\t\t\t\tflexDirection: \"column\",\n\t\t\t\t\t\t\talignItems: \"center\",\n\t\t\t\t\t\t\tjustifyContent: \"center\",\n\t\t\t\t\t\t\tfontSize: 12,\n\t\t\t\t\t\t}}>\n\t\t\t\t\t\t<FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"3x\" />\n\t\t\t\t\t\t<span style={{ marginTop: 10, fontSize: \"14px\" }}>\n\t\t\t\t\t\t\t{userObj.displayName\n\t\t\t\t\t\t\t\t? `${userObj.displayName} Profile`\n\t\t\t\t\t\t\t\t: \"Profile\"}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</Link>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t</nav>\n\t);\n};\n\nexport default Navigation;\n","import React, { useState } from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Auth from \"../routes/Auth\";\nimport Home from \"../routes/Home\";\nimport Profile from \"../routes/Profile\";\nimport Navigation from \"./Navigation\";\n\nconst AppRouter = ({ isLoggedIn, userObj, refreshUser }) => {\n\treturn (\n\t\t<Router>\n\t\t\t{isLoggedIn && <Navigation userObj={userObj} />}\n\t\t\t<Switch>\n\t\t\t\t{isLoggedIn ? (\n\t\t\t\t\t<div\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tmaxWidth: 890,\n\t\t\t\t\t\t\twidth: \"100%\",\n\t\t\t\t\t\t\tmargin: \"0 auto\",\n\t\t\t\t\t\t\tmarginTop: 80,\n\t\t\t\t\t\t\tdisplay: \"flex\",\n\t\t\t\t\t\t\tjustifyContent: \"center\",\n\t\t\t\t\t\t}}>\n\t\t\t\t\t\t<Route exact path=\"/\">\n\t\t\t\t\t\t\t<Home refreshUser={refreshUser} userObj={userObj} />\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t<Route exact path=\"/profile\">\n\t\t\t\t\t\t\t<Profile refreshUser={refreshUser} userObj={userObj} />\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t</div>\n\t\t\t\t) : (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<Route exact path=\"/\">\n\t\t\t\t\t\t\t<Auth />\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t</>\n\t\t\t\t)}\n\t\t\t</Switch>\n\t\t</Router>\n\t);\n};\n\nexport default AppRouter;\n","import react, { useState, useEffect } from \"react\";\nimport AppRouter from \"./Router\";\nimport fbase from \"../fbase\";\nimport { authService } from \"../fbase\";\n\nfunction App() {\n\tconst [init, setInit] = useState(false);\n\tconst [isLoggedIn, setIsLoggedIn] = useState(false);\n\tconst [userObj, setUserObj] = useState(\"\");\n\tuseEffect(() => {\n\t\tauthService.onAuthStateChanged((user) => {\n\t\t\tif (user) {\n\t\t\t\tsetIsLoggedIn(true);\n\t\t\t\tsetUserObj({\n\t\t\t\t\tdisplayName: user.displayName,\n\t\t\t\t\tuid: user.uid,\n\t\t\t\t\tupdateProfile: (args) => user.updateProfile(args),\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tsetIsLoggedIn(false);\n\t\t\t}\n\t\t\tsetInit(true);\n\t\t});\n\t}, []);\n\tconst refreshUser = () => {\n\t\tconst user = authService.currentUser;\n\t\tsetUserObj({\n\t\t\tdisplayName: user.displayName,\n\t\t\tuid: user.uid,\n\t\t\tupdateProfile: (args) => user.updateProfile(args),\n\t\t});\n\t};\n\treturn (\n\t\t<>\n\t\t\t{init ? (\n\t\t\t\t<AppRouter\n\t\t\t\t\trefreshUser={refreshUser}\n\t\t\t\t\tisLoggedIn={isLoggedIn}\n\t\t\t\t\tuserObj={userObj}\n\t\t\t\t/>\n\t\t\t) : (\n\t\t\t\t\"Initializing...\"\n\t\t\t)}\n\t\t</>\n\t);\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport firebase from \"firebase\";\nimport \"./styles.css\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n"],"sourceRoot":""}